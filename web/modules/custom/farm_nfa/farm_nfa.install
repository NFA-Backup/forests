<?php

use Drupal\log\Entity\LogType;
use Drush\Drush;
use Drupal\taxonomy\Entity\Term;

/**
 * @file
 * Install, update and uninstall functions for the farm_nfa module.
 */

/*
 * Uninstall farm_forest_plan and farm_input modules to remove toolbar links.
 */
function farm_nfa_remove_toolbar_links_helper() {
  // Delete forest plan and input log entities before uninstalling the modules.
  $plan_storage = \Drupal::service('entity_type.manager')->getStorage('plan');
  $plan_results = $plan_storage->getQuery()
    ->condition('type', 'forest')
    ->accessCheck(FALSE)
    ->execute();
  if ($plan_results) {
    $plans = $plan_storage->loadMultiple($plan_results);
    $plan_storage->delete($plans);
  }

  $log_storage = \Drupal::service('entity_type.manager')->getStorage('log');
  $log_results = $log_storage->getQuery()
    ->condition('type', 'input')
    ->accessCheck(FALSE)
    ->execute();
  if ($log_results) {
    $logs = $log_storage->loadMultiple($log_results);
    $log_storage->delete($logs);
  }

  // Uninstall the following modules to hide its toolbar menu links.
  \Drupal::service('module_installer')->uninstall(
    ['farm_forest_plan', 'farm_input', 'farm_update']
  );
}

/**
 * Implements hook_install().
 */
function farm_nfa_install(){
  farm_nfa_remove_toolbar_links_helper();
  \Drupal::service('module_installer')->uninstall(['farm_ui_action']);
}

/**
 * Implements hook_update_last_removed().
 */
function farm_nfa_update_last_removed() {
  return 9056;
}

/**
 * Add permissions form mode and users reference fields to the NFA Plan entity.
 */
function farm_nfa_update_10001(&$sandbox) {
  farm_nfa_update_helper(10001);
}

/**
 * Enable media library and media library edit modules.
 */
function farm_nfa_update_10002(&$sandbox) {
  \Drupal::service('module_installer')->install(['media_library']);
  \Drupal::service('module_installer')->install(['media_library_edit']);
  // See accompanying farm_nfa_post_update_10002. We do the config import in a
  // post update because it depends on the media library module.
}

/**
 * Change media file system from private to public.
 */
function farm_nfa_update_10003(&$sandbox) {
  farm_nfa_update_helper(10003);
}

/**
 * Fix sector and range layouts.
 */
function farm_nfa_update_10004(&$sandbox) {
  farm_nfa_update_helper(10004);
}


/**
 * Add CFR global id field.
 */
function farm_nfa_update_10005(&$sandbox) {
  farm_nfa_update_helper(10005);
}

/**
 * Configure JSON:API for CFRs only.
 */
function farm_nfa_update_10006(&$sandbox) {
  farm_nfa_update_helper(10006);
}

/**
 * Add JSON:API user role.
 */
function farm_nfa_update_10007(&$sandbox) {
  farm_nfa_update_helper(10007);
}

/**
 * Configure OAuth2 private key directory.
 */
function farm_nfa_update_10008(&$sandbox) {
  farm_nfa_update_helper(10008);
}

/**
 * Change media file system from public to private.
 */
function farm_nfa_update_10009(&$sandbox) {
  farm_nfa_update_helper(10009);
}

/**
 * Anonymous user cannot view media.
 */
function farm_nfa_update_10010(&$sandbox) {
  farm_nfa_update_helper(10010);
}

/**
 * Rename Log to Task.
 */
function farm_nfa_update_10011(&$sandbox) {
  farm_nfa_update_helper(10011);
}

/**
 * Update to FarmOS 3.3.1.
 */
function farm_nfa_update_10012(&$sandbox) {
  farm_nfa_update_helper(10012);
}

/**
 * Add keys module and configure GFW_API_KEY.
 */
function farm_nfa_update_10013(&$sandbox) {
  \Drupal::service('module_installer')->install(['key']);
  farm_nfa_update_helper(10013);
}
